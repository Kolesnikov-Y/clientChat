[{"C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\index.tsx":"1","C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\App.tsx":"3","C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\pages\\ChatPage.tsx":"4","C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\app-state.ts":"5","C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\redux\\users\\store\\actions.ts":"6","C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\redux\\users\\store\\reducers.ts":"7","C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\pages\\ChatContainer.tsx":"8","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\index.tsx":"9","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\reportWebVitals.ts":"10","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\app-state.ts":"11","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\App.tsx":"12","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\store\\reducers.ts":"13","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\ChatContainer.tsx":"14","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\store\\actions.ts":"15","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\ChatPage.tsx":"16","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\user\\UserContainer.tsx":"17","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\user\\UserComponent.tsx":"18","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\store\\actions.ts":"19","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\saga\\index.ts":"20","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\store\\reducers.ts":"21","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\saga\\chatsHandler.ts":"22","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\saga\\index.ts":"23","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\saga\\userHandler.ts":"24","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\chat\\chatFrom.tsx":"25"},{"size":476,"mtime":1611675633605,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1610984153080,"results":"28","hashOfConfig":"27"},{"size":2916,"mtime":1611836797589,"results":"29","hashOfConfig":"27"},{"size":1751,"mtime":1611926289427,"results":"30","hashOfConfig":"27"},{"size":651,"mtime":1611929714034,"results":"31","hashOfConfig":"27"},{"size":198,"mtime":1611675627634,"results":"32","hashOfConfig":"27"},{"size":621,"mtime":1611675797002,"results":"33","hashOfConfig":"27"},{"size":1145,"mtime":1611926642136,"results":"34","hashOfConfig":"27"},{"size":476,"mtime":1611675633605,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1610984153080,"results":"37","hashOfConfig":"36"},{"size":1159,"mtime":1612266059961,"results":"38","hashOfConfig":"36"},{"size":473,"mtime":1612190801275,"results":"39","hashOfConfig":"36"},{"size":1636,"mtime":1612268904084,"results":"40","hashOfConfig":"36"},{"size":2461,"mtime":1612441408795,"results":"41","hashOfConfig":"36"},{"size":396,"mtime":1612353597126,"results":"42","hashOfConfig":"36"},{"size":1151,"mtime":1612441408056,"results":"43","hashOfConfig":"36"},{"size":3472,"mtime":1612446882636,"results":"44","hashOfConfig":"36"},{"size":3731,"mtime":1612455281586,"results":"45","hashOfConfig":"36"},{"size":754,"mtime":1612353682358,"results":"46","hashOfConfig":"36"},{"size":199,"mtime":1612266046278,"results":"47","hashOfConfig":"36"},{"size":1886,"mtime":1612353779079,"results":"48","hashOfConfig":"36"},{"size":3910,"mtime":1612353516826,"results":"49","hashOfConfig":"36"},{"size":201,"mtime":1612276492098,"results":"50","hashOfConfig":"36"},{"size":4915,"mtime":1612278233292,"results":"51","hashOfConfig":"36"},{"size":986,"mtime":1612447219934,"results":"52","hashOfConfig":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"ogu1bc",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"mlq20n",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\index.tsx",[],["108","109"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\App.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\pages\\ChatPage.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\app-state.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\redux\\users\\store\\actions.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\redux\\users\\store\\reducers.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\bench\\saga\\my-app\\src\\pages\\ChatContainer.tsx",["110","111","112"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\index.tsx",[],["113","114"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\reportWebVitals.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\app-state.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\App.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\store\\reducers.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\ChatContainer.tsx",["115","116"],"import React from 'react';\r\nimport { AppState } from '../app-state';\r\nimport ChatPage from './ChatPage';\r\nimport io from 'socket.io-client';\r\nimport { useSelector } from 'react-redux';\r\nimport './chat/style/chatContainer.css'; \r\nimport {v4 as uuidv4}  from 'uuid';\r\nimport { UserChatModel } from './user/UserContainer';\r\n\r\nconst socket = io.connect('http://10.10.4.172:3001'); \r\n\r\ninterface UserMessageModel {\r\n    id: string;\r\n    name: string; \r\n    avatar: string; \r\n    isOnline: boolean\r\n}\r\n\r\nexport  interface MessageModel {\r\n        id: string; \r\n        text: string; \r\n        createdAt: Date;\r\n        user: UserMessageModel\r\n    }; \r\n\r\ninterface ChatContainerProps {\r\n    userInfo : UserMessageModel, \r\n}\r\n\r\nfunction ChatContainer ({userInfo}: ChatContainerProps): JSX.Element {\r\nconst [message, setMessage] = React.useState<MessageModel>({\r\n        id: \"\", \r\n        text: '', \r\n        createdAt: new Date(), \r\n        user: {\r\n            id: userInfo.id, \r\n            name: userInfo.name,\r\n            avatar: userInfo.avatar, \r\n            isOnline: userInfo.isOnline,\r\n        },\r\n    });\r\n    const [chat, setChat] = React.useState<MessageModel[]>([]); \r\n\r\n    const currentChatId = useSelector<AppState, string | undefined >(({chats}) => chats.chatId);\r\n\r\n    React.useEffect(() => {\r\n        // socket.emit('connection', currentChatId);\r\n        // socket.on(\"connection\", (response: any): void => {\r\n        //   console.log(response);\r\n        // });\r\n        console.log(\"hello world\");  \r\n      }, [])\r\n\r\n      React.useEffect(() => {\r\n        socket.emit('setChatToServer', currentChatId); \r\n        socket.on('setChatToClient', (response: MessageModel[]): void => {\r\n            console.log(\"server response\", response);\r\n            setChat(response)\r\n        })\r\n      }, [currentChatId])\r\n\r\n    const submitHelper = (userMessage: string) => {\r\n        let request: MessageModel = {\r\n            ...message, \r\n            id: uuidv4(),\r\n            text: userMessage,\r\n            createdAt: new Date(Date.now())\r\n        }\r\n        socket.emit('msgToServer', {payload: request}); \r\n        socket.on(\"msgToClient\", (response: MessageModel): void => {\r\n            console.log(response);\r\n            setChat([...chat, response])\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n            <ChatPage submitHelper={submitHelper} chat={chat} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(ChatContainer)","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\store\\actions.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\ChatPage.tsx",["117","118"],"import React, { ChangeEvent } from 'react';    \r\nimport ChatFromComponent from './chat/chatFrom';\r\nimport { MessageModel } from './ChatContainer';\r\nimport { UserChatModel } from './user/UserContainer';\r\n\r\n\r\ninterface ChatPageProps {\r\n    submitHelper : (message: string) => void;\r\n    chat: MessageModel[];\r\n    disconnectClient?: () => void; \r\n    connectClient?: () => void;\r\n}\r\n\r\n\r\n function ChatPage ({submitHelper, chat}: ChatPageProps): JSX.Element {\r\n    // ==============================\r\n    \r\n    function renderChat () {\r\n        if(chat && chat.length) {\r\n            return chat.map((chat) => {\r\n                return (\r\n                    <li className=\"chat-message\" key={Math.random() + Math.random()}>\r\n                        <p>{chat.text}</p>\r\n                    </li>  \r\n                )\r\n            })\r\n        }\r\n        return null\r\n    }\r\n\r\n    return (\r\n            <div className=\"chat-container\">\r\n                <ChatFromComponent submitHelper={submitHelper}/>\r\n                <ul className=\"chat\">\r\n                    {renderChat()}\r\n                </ul>\r\n            </div>\r\n    )\r\n}\r\n \r\nexport default ChatPage","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\user\\UserContainer.tsx",["119","120","121","122","123"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\user\\UserComponent.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\store\\actions.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\saga\\index.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\store\\reducers.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\saga\\chatsHandler.ts",["124"],"import axios, { AxiosResponse } from \"axios\";\r\nimport { defineAction } from \"rd-redux-utils\"\r\nimport { debounce, put, takeEvery } from \"redux-saga/effects\"\r\nimport { RequestCreateChatModel } from \"../../../model\";\r\nimport { UserDataModel } from \"../../../pages/user/UserContainer\";\r\nimport { changeUserDataAction } from \"../../users/store/actions\";\r\nimport { createNewChatAction, debounceUserSearchAction, findUserByNameAction } from \"../store/actions\"\r\nimport { InitialChatModel } from \"../store/reducers\"\r\n\r\nexport const startOfServerAccessAction = defineAction<InitialChatModel>(\"START_OF_SERVER_ACCESS\"); \r\nexport const failServerAccessAction = defineAction<InitialChatModel>(\"FAIL_OF_SERVER_ACCESS\"); \r\nexport const completedGetUserByName = defineAction<InitialChatModel>('COMPLETED_GET_FEATURE_BY_NAME'); \r\nexport const completedCreateNewChatroomAction = defineAction<InitialChatModel>(\"COMPLETED_CREATE_NEW_CHATROOM_ACTION\"); \r\n\r\n\r\nexport function* createNewChatSaga() {\r\n   yield takeEvery(createNewChatAction.TYPE, function* (\r\n        action: typeof createNewChatAction.typeOf.action\r\n    ) {\r\n        const actionPayload: RequestCreateChatModel = action; \r\n\r\n        try {\r\n\r\n            yield put(\r\n                startOfServerAccessAction({\r\n                    status: 'running',\r\n                    users: [], \r\n                    isChatConnected: false\r\n                })\r\n            )\r\n            \r\n            const response: AxiosResponse<string> = yield axios.post(\r\n                `http://localhost:3001/api/chats/create`, \r\n                actionPayload\r\n            );\r\n\r\n            console.log(response.data);\r\n            \r\n            if(response.status === 201) {\r\n                yield put(\r\n                    completedCreateNewChatroomAction({\r\n                        status: 'success', \r\n                        users: [], \r\n                        chatId: response.data, \r\n                        isChatConnected: false,\r\n                    })\r\n                )\r\n\r\n                // if(actionPayload.userEmail !== undefined) {\r\n                //     yield put(\r\n                //         changeUserDataAction({\r\n                //             email: actionPayload.userEmail, \r\n                //             changeFields: {\r\n                //                 chats: [response.data, ...chats]\r\n                //             }\r\n                //         })\r\n                //     )\r\n                // }\r\n            }\r\n\r\n        } catch (error) {\r\n            yield put(\r\n                failServerAccessAction({\r\n                    status: 'error', \r\n                    errorMsg: error.toString(), \r\n                    users: [],\r\n                    isChatConnected: false, \r\n                }) \r\n            )\r\n        }\r\n    })\r\n}\r\n\r\n\r\nfunction* findUserByNameSaga (action: typeof findUserByNameAction.typeOf.action ) {\r\n    try {\r\n        yield put(\r\n            startOfServerAccessAction({\r\n                status: \"running\", \r\n                users: [],\r\n                isChatConnected: false, \r\n            }) \r\n        )\r\n        const response: AxiosResponse<UserDataModel[]> = yield axios.get(\r\n            `http://localhost:3001/api/user?name=${action.name}`\r\n        );\r\n\r\n        if(response.status === 200)  {\r\n            yield put(\r\n                completedGetUserByName({\r\n                    status: \"success\", \r\n                    users: response.data, \r\n                    isChatConnected: false,\r\n                })\r\n            )\r\n        }   \r\n    } catch (error) {\r\n        yield put(\r\n            failServerAccessAction({\r\n                status: 'error', \r\n                errorMsg: error.toString(), \r\n                users: [],\r\n                isChatConnected: false,\r\n            }) \r\n        )\r\n    } \r\n}\r\n\r\nexport function* debounceSaga() {\r\n    yield debounce(500, debounceUserSearchAction.TYPE, findUserByNameSaga);\r\n}","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\saga\\index.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\saga\\userHandler.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\chat\\chatFrom.tsx",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":15,"column":12,"nodeType":"131","messageId":"132","endLine":15,"endColumn":19},{"ruleId":"129","severity":1,"message":"133","line":15,"column":21,"nodeType":"131","messageId":"132","endLine":15,"endColumn":31},{"ruleId":"134","severity":1,"message":"135","line":22,"column":7,"nodeType":"136","endLine":22,"endColumn":9,"suggestions":"137"},{"ruleId":"125","replacedBy":"138"},{"ruleId":"127","replacedBy":"139"},{"ruleId":"129","severity":1,"message":"140","line":8,"column":10,"nodeType":"131","messageId":"132","endLine":8,"endColumn":23},{"ruleId":"129","severity":1,"message":"133","line":31,"column":17,"nodeType":"131","messageId":"132","endLine":31,"endColumn":27},{"ruleId":"129","severity":1,"message":"141","line":1,"column":17,"nodeType":"131","messageId":"132","endLine":1,"endColumn":28},{"ruleId":"129","severity":1,"message":"140","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":23},{"ruleId":"129","severity":1,"message":"142","line":4,"column":10,"nodeType":"131","messageId":"132","endLine":4,"endColumn":33},{"ruleId":"129","severity":1,"message":"143","line":4,"column":35,"nodeType":"131","messageId":"132","endLine":4,"endColumn":61},{"ruleId":"129","severity":1,"message":"144","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":21},{"ruleId":"134","severity":1,"message":"145","line":52,"column":8,"nodeType":"136","endLine":52,"endColumn":10,"suggestions":"146"},{"ruleId":"134","severity":1,"message":"147","line":61,"column":8,"nodeType":"136","endLine":61,"endColumn":18,"suggestions":"148"},{"ruleId":"129","severity":1,"message":"149","line":6,"column":10,"nodeType":"131","messageId":"132","endLine":6,"endColumn":30},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"@typescript-eslint/no-unused-vars","'message' is assigned a value but never used.","Identifier","unusedVar","'setMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'chat'. Either include it or remove the dependency array. You can also do a functional update 'setChat(c => ...)' if you only need 'chat' in the 'setChat' call.","ArrayExpression",["152"],["150"],["151"],"'UserChatModel' is defined but never used.","'ChangeEvent' is defined but never used.","'chatroomConnectedAction' is defined but never used.","'chatroomDisconnectedAction' is defined but never used.","'ChatContainer' is defined but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'molID'. Either include them or remove the dependency array.",["153"],"React Hook React.useCallback has a missing dependency: 'chatStatus'. Either include it or remove the dependency array.",["154"],"'changeUserDataAction' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},"Update the dependencies array to be: [chat]",{"range":"161","text":"162"},"Update the dependencies array to be: [dispatch, molID]",{"range":"163","text":"164"},"Update the dependencies array to be: [chatStatus, dispatch]",{"range":"165","text":"166"},[714,716],"[chat]",[1592,1594],"[dispatch, molID]",[1926,1936],"[chatStatus, dispatch]"]