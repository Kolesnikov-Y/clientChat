[{"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\index.tsx":"1","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\reportWebVitals.ts":"2","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\app-state.ts":"3","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\App.tsx":"4","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\store\\reducers.ts":"5","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\store\\actions.ts":"6","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\user\\UserContainer.tsx":"7","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\user\\UserComponent.tsx":"8","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\store\\actions.ts":"9","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\saga\\index.ts":"10","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\store\\reducers.ts":"11","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\saga\\chatsHandler.ts":"12","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\saga\\index.ts":"13","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\saga\\userHandler.ts":"14","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\chat\\ChatContainer.tsx":"15","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\chat\\ChatPage.tsx":"16","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\chat\\Ð¡hatForm.tsx":"17","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\app-routes.tsx":"18","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\index.ts":"19","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\urls.ts":"20","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\routes.tsx":"21","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\pages\\GetStartedPage.tsx":"22","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\pages\\LoginPage.tsx":"23","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\pages\\ForgotPassword.tsx":"24","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\pages\\RegisterPage.tsx":"25","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\history-instance.ts":"26","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\layout\\AuthLayout.tsx":"27","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\containers\\LoginFromContainer.tsx":"28","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\components\\FormComponent.tsx":"29","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\containers\\RegistrFromContainer.tsx":"30","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\components\\FormTest.tsx":"31","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\containers\\LoginTestContainer.tsx":"32"},{"size":629,"mtime":1613557880048,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1610984153080,"results":"35","hashOfConfig":"34"},{"size":1346,"mtime":1613557879034,"results":"36","hashOfConfig":"34"},{"size":603,"mtime":1613132508218,"results":"37","hashOfConfig":"34"},{"size":1636,"mtime":1612865892257,"results":"38","hashOfConfig":"34"},{"size":318,"mtime":1612536620700,"results":"39","hashOfConfig":"34"},{"size":3864,"mtime":1613058420858,"results":"40","hashOfConfig":"34"},{"size":4114,"mtime":1613058419592,"results":"41","hashOfConfig":"34"},{"size":858,"mtime":1613131608872,"results":"42","hashOfConfig":"34"},{"size":311,"mtime":1613053147159,"results":"43","hashOfConfig":"34"},{"size":2536,"mtime":1613054239082,"results":"44","hashOfConfig":"34"},{"size":8028,"mtime":1613053644971,"results":"45","hashOfConfig":"34"},{"size":201,"mtime":1612884288733,"results":"46","hashOfConfig":"34"},{"size":3530,"mtime":1612884297810,"results":"47","hashOfConfig":"34"},{"size":3243,"mtime":1613131604115,"results":"48","hashOfConfig":"34"},{"size":2897,"mtime":1613131615403,"results":"49","hashOfConfig":"34"},{"size":1204,"mtime":1612778708855,"results":"50","hashOfConfig":"34"},{"size":228,"mtime":1613558142035,"results":"51","hashOfConfig":"34"},{"size":50,"mtime":1613556782863,"results":"52","hashOfConfig":"34"},{"size":311,"mtime":1613557885385,"results":"53","hashOfConfig":"34"},{"size":617,"mtime":1613568810353,"results":"54","hashOfConfig":"34"},{"size":129,"mtime":1613557883539,"results":"55","hashOfConfig":"34"},{"size":435,"mtime":1613568811800,"results":"56","hashOfConfig":"34"},{"size":133,"mtime":1613557882940,"results":"57","hashOfConfig":"34"},{"size":319,"mtime":1613558288982,"results":"58","hashOfConfig":"34"},{"size":97,"mtime":1613557880764,"results":"59","hashOfConfig":"34"},{"size":378,"mtime":1613569761552,"results":"60","hashOfConfig":"34"},{"size":488,"mtime":1613568912237,"results":"61","hashOfConfig":"34"},{"size":1731,"mtime":1613568899451,"results":"62","hashOfConfig":"34"},{"size":422,"mtime":1613558297673,"results":"63","hashOfConfig":"34"},{"size":2193,"mtime":1613569379679,"results":"64","hashOfConfig":"34"},{"size":1962,"mtime":1613564049867,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"mlq20n",{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\index.tsx",["136"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\reportWebVitals.ts",[],["137","138"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\app-state.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\App.tsx",["139"],"import React from 'react';\nimport LoginTestContainer from './pages/auth/test/LoginTestContainer';\nimport './pages/style/style.css'\nimport UserContainer from './pages/user/UserContainer';\nimport './index.scss'\n\n\nfunction App(): JSX.Element {\n\n    // const a = `14413628235-o9h09ul5k9m9715udfnrms3i1b1pb28d.apps.googleusercontent.com`\n\n  return (\n    <div className=\"App\">\n      <LoginTestContainer/>\n\n        {/* <header className='header'>\n          HEADER\n        </header>\n      <div className=\"container\">\n          <UserContainer/>\n      </div> */}\n\n       \n      </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\store\\reducers.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\store\\actions.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\user\\UserContainer.tsx",["140"],"import React from 'react';\r\nimport './style/userStyle.css'\r\nimport { AppState } from '../../app-state';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createNewChatAction, debounceUserSearchAction, setChatroomAction } from '../../redux/chats/store/actions';\r\nimport { addUsersChatAction, getUserInfoAction } from '../../redux/users/store/actions';\r\nimport UserComponent from './UserComponent';\r\nimport  { MessageModel } from '../chat/ChatContainer';\r\nimport { ChatTitleModel } from '../../model';\r\n\r\nexport  interface UserDataModel {\r\n    name: string; \r\n    email: string; \r\n    gender: string; \r\n    id: string; \r\n    phone: string; \r\n    chats: UserChatModel[]; \r\n    contacts: UserContactsModel[];\r\n    age: number;\r\n} \r\n\r\nexport interface UserChatModel {\r\n    chatId: string; \r\n    chatTitle : ChatTitleModel[]; \r\n    messages: MessageModel[]\r\n}\r\n\r\nexport interface UserContactsModel {\r\n    name: string; \r\n    phone: string; \r\n    id: string; \r\n    gender: string; \r\n    age: string; \r\n}\r\n\r\n function UserContainer (): JSX.Element {\r\n    const [mockID, setMockID] = React.useState<string>('');\r\n    const [isChatOpen, setChatOpen] = React.useState<boolean>(false);\r\n\r\n    const userFromSearch = useSelector<AppState, UserDataModel[]>(({chats}) => chats.users);\r\n    const chatStatus = useSelector<AppState, string>(({chats} )=> chats.status)\r\n\r\n    const dispatch = useDispatch(); \r\n\r\n    const getUsers = React.useCallback((searchValue: string) => {\r\n        dispatch(debounceUserSearchAction({name: searchValue}))\r\n    }, [dispatch]); \r\n\r\n\r\n\r\n    const isChatCreated = (chat : UserChatModel[], contactId: string ) => {\r\n        return chat.find((chat) => {\r\n            return chat.chatTitle.find((user) => {\r\n                return user.userId === contactId\r\n            })\r\n        }); \r\n    }\r\n\r\n    const getCurrentChat = (id: string): void => {\r\n        dispatch(setChatroomAction({id}));\r\n        if(chatStatus !== \"error\"){\r\n            setChatOpen(true);\r\n        } \r\n    }; \r\n\r\n    const createAndGetNeedChat = (contactName: {name: string, id: string}, user: UserDataModel) => {\r\n        console.log(\"contact\", contactName);\r\n        console.log(\"user\", user);        \r\n        \r\n        const newChat =  {\r\n            chatId: ``,\r\n            chatTitle: [{userName: user.name , userId: user.id}, {userName: contactName.name, userId: contactName.id}],\r\n            messages: []\r\n        }\r\n        dispatch(createNewChatAction(newChat));\r\n        // if(chatStatus === \"success\") setChatOpen(true);\r\n    }\r\n\r\n    const openChatWithUser = (contactName: {name: string, id: string}, user: UserDataModel ): void => {\r\n         \r\n        const getChat = isChatCreated(user.chats, contactName.id);\r\n    \r\n        if(getChat) {\r\n            console.log(\"chat is here\", getChat.chatId)\r\n            getCurrentChat(getChat.chatId); \r\n        }\r\n        else {\r\n            createAndGetNeedChat(contactName, user)\r\n        }\r\n    }\r\n\r\n    const changeUsersIDHelper = (e: any) => {\r\n        setMockID(e.currentTarget.value)\r\n    }\r\n\r\n    const submitHelper = (e: any) => {\r\n        e.preventDefault(); \r\n        dispatch(getUserInfoAction(\r\n            {id: mockID}\r\n        ))\r\n    }\r\n\r\n    return (\r\n        <div className=\"userContainer\">\r\n            <form action=\"\" onSubmit={submitHelper}>\r\n                <input type=\"text\" placeholder=\"User ID\" value={mockID} onChange={changeUsersIDHelper}/>\r\n            </form>\r\n\r\n          <UserComponent userFromSearch={userFromSearch} \r\n                getUsers={getUsers} \r\n                isChatOpen={isChatOpen} \r\n                getCurrentChat={getCurrentChat} \r\n                openChatWithUser={openChatWithUser}\r\n                createAndGetNeedChat={createAndGetNeedChat}\r\n                />\r\n                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo( UserContainer );",["141","142"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\user\\UserComponent.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\store\\actions.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\saga\\index.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\store\\reducers.ts",["143"],"import { Action } from \"redux\"; \r\nimport { UserChatModel, UserDataModel } from \"../../../pages/user/UserContainer\";\r\nimport { UserStateModel } from \"../../users/store/reducers\";\r\nimport { completedCreateNewChatroomAction, completedDeleteMessageAction, completedEditMessageAction, completedGetNeedChatAction, completedGetUserByName, failServerAccessAction, startOfServerAccessAction } from \"../saga/chatsHandler\";\r\nimport { deleteMessageAction } from \"./actions\";\r\n\r\nexport interface ChatUserModel {\r\n    user: UserStateModel; \r\n    massage: string; \r\n    messageDate: Date\r\n}\r\n\r\nexport interface InitialChatModel {\r\n    status: \"initial\" | \"success\" | 'error' | \"running\";\r\n    users: UserDataModel[]; \r\n    currentChat: UserChatModel; \r\n    errorMsg?: string; \r\n}\r\n\r\n\r\nconst initialState: InitialChatModel = {\r\n    status: 'initial',\r\n    currentChat: {\r\n        chatId: '', \r\n        chatTitle: [], \r\n        messages: []\r\n    },\r\n    users: [], \r\n}\r\n\r\nexport function UserChatReducer (state: InitialChatModel = initialState, action: Action) {\r\n\r\n    if(startOfServerAccessAction.is(action)){\r\n        return {\r\n            ...state, \r\n            status: action.status, \r\n        }\r\n    }\r\n\r\n    if(completedGetUserByName.is(action)){\r\n        return {\r\n            ...state,\r\n            status: action.status, \r\n            users: [...action.users]\r\n        }\r\n    }\r\n\r\n    if(failServerAccessAction.is(action)){\r\n        return {\r\n            ...state, \r\n            status: action.status, \r\n            errorMsg: action.errorMsg\r\n        }\r\n    }\r\n\r\n    if(completedCreateNewChatroomAction.is(action)){\r\n        return {\r\n            ...state, \r\n            status: action.status, \r\n            currentChat: action.currentChat\r\n        }\r\n    }\r\n\r\n    if(completedGetNeedChatAction.is(action)){\r\n        return state = {\r\n            ...state, \r\n            status: action.status,\r\n            currentChat: action.currentChat\r\n        }   \r\n    }\r\n\r\n    if(completedDeleteMessageAction.is(action)){\r\n        return {...state, \r\n            status: action.status\r\n        }\r\n    }\r\n    if(completedEditMessageAction.is(action)){\r\n        return {...state, \r\n            status: action.status\r\n        }\r\n    }\r\n\r\n    if(action.type === 'CHATROOM_CONNECTED'){\r\n        return {\r\n            ...state, \r\n            isChatConnected: true\r\n        }\r\n    }\r\n    \r\n    if(action.type === 'CHATROOM_DISCONNECTED'){\r\n        return {\r\n            ...state, \r\n            isChatConnected: false \r\n        }\r\n    }\r\n\r\n    return state\r\n} ","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\chats\\saga\\chatsHandler.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\saga\\index.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\redux\\users\\saga\\userHandler.ts",["144"],"import { defineAction } from \"rd-redux-utils\";\r\nimport { UserStateModel } from \"../store/reducers\";\r\nimport { put, takeEvery } from \"redux-saga/effects\";\r\nimport { addUsersChatAction, getUserInfoAction } from \"../store/actions\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\nimport { RequestGetUserByIdModel, ResponseGetUserModel , ResponseChangeUserDataModel, RequestAddUsersChatModel} from \"../../../model\";\r\nimport { RequestChangeUserDataModel } from \"../../../model/request/requestChangeUserData.model\";\r\n\r\nexport const userStartOfServerAccessAction = defineAction<UserStateModel>(\"USER/START_OF_SERVER_ACCESS\");\r\nexport const completedGetUserAction = defineAction<UserStateModel>(\"USER/GET_USER\"); \r\nexport const userFailedAccessAction = defineAction<UserStateModel>(\"USER/FAILED_ACCESS\");\r\nexport const completedChangeUserDataAction = defineAction<UserStateModel>(\"USER/COMPLETED_ADD_TO_USER_CHATS\");\r\n\r\nconst mockUserInfo = {\r\n    name: '', \r\n    email: '', \r\n    id: '', \r\n    chats: [], \r\n    age: 0, \r\n    gender: 'male', \r\n    phone: '',\r\n    contacts: [],\r\n}\r\n\r\nexport function* addChatToUsersSaga () {\r\n    yield takeEvery(addUsersChatAction.TYPE, function* (\r\n        action: typeof addUsersChatAction.typeOf.action\r\n    ){\r\n        let addData: RequestAddUsersChatModel = action;\r\n\r\n        try {\r\n            yield put(\r\n                userStartOfServerAccessAction({\r\n                    status: 'running', \r\n                    userInfo: mockUserInfo\r\n                })\r\n            )\r\n\r\n            const response: AxiosResponse<ResponseChangeUserDataModel> = yield axios.patch(\r\n                `http://localhost:3001/api/user/addChatToUsers`, addData\r\n             );\r\n\r\n             if(response.status === 200) {\r\n                 yield put(\r\n                    completedChangeUserDataAction({\r\n                        status: 'success',\r\n                        payload: response.data, \r\n                        userInfo: mockUserInfo\r\n                    }\r\n                        )\r\n                 )\r\n             }\r\n            \r\n        } catch (error) {\r\n                  yield put(\r\n                userFailedAccessAction({\r\n                    status: 'error', \r\n                    errorMsg:  error.toString(), \r\n                    userInfo: mockUserInfo\r\n                })\r\n            )\r\n        }\r\n    })\r\n}\r\n\r\nexport function* getUserSaga() {\r\n    yield takeEvery(getUserInfoAction.TYPE, function* (\r\n        action: typeof getUserInfoAction.typeOf.action\r\n    ) {\r\n        try {\r\n            const actionModel: RequestGetUserByIdModel = action\r\n\r\n            yield put(\r\n                userStartOfServerAccessAction({\r\n                    status: 'running', \r\n                    userInfo: mockUserInfo\r\n                })\r\n            ); \r\n\r\n            const response: AxiosResponse<ResponseGetUserModel[]> = yield axios.get(\r\n               ` http://localhost:3001/api/user/${actionModel.id}`\r\n            );\r\n            \r\n            if(response.status === 200) {\r\n                yield put(\r\n                    completedGetUserAction({\r\n                        userInfo: response.data[0],\r\n                        status: 'success'\r\n                    })\r\n                )\r\n            }\r\n\r\n        } catch (error) {\r\n            yield put(\r\n                userFailedAccessAction({\r\n                    status: 'error', \r\n                    errorMsg:  error.toString(), \r\n                    userInfo: mockUserInfo\r\n                })\r\n            )\r\n        }\r\n    })\r\n}","C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\chat\\ChatContainer.tsx",["145","146","147","148"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\chat\\ChatPage.tsx",["149","150","151"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\pages\\chat\\Ð¡hatForm.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\app-routes.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\index.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\urls.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\routes.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\pages\\GetStartedPage.tsx",["152"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\pages\\LoginPage.tsx",["153"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\pages\\ForgotPassword.tsx",["154"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\pages\\RegisterPage.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\history-instance.ts",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\layout\\AuthLayout.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\containers\\LoginFromContainer.tsx",["155"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\components\\FormComponent.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\containers\\RegistrFromContainer.tsx",[],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\components\\FormTest.tsx",["156"],"C:\\Users\\Anuitex-12\\Desktop\\proj\\clientChat\\src\\features\\auth\\containers\\LoginTestContainer.tsx",[],{"ruleId":"157","severity":1,"message":"158","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":11},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"157","severity":1,"message":"165","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":21},{"ruleId":"157","severity":1,"message":"166","line":6,"column":10,"nodeType":"159","messageId":"160","endLine":6,"endColumn":28},{"ruleId":"161","replacedBy":"167"},{"ruleId":"163","replacedBy":"168"},{"ruleId":"157","severity":1,"message":"169","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":29},{"ruleId":"157","severity":1,"message":"170","line":7,"column":10,"nodeType":"159","messageId":"160","endLine":7,"endColumn":36},{"ruleId":"157","severity":1,"message":"169","line":7,"column":10,"nodeType":"159","messageId":"160","endLine":7,"endColumn":29},{"ruleId":"157","severity":1,"message":"171","line":33,"column":21,"nodeType":"159","messageId":"160","endLine":33,"endColumn":31},{"ruleId":"172","severity":1,"message":"173","line":59,"column":8,"nodeType":"174","endLine":59,"endColumn":10,"suggestions":"175"},{"ruleId":"172","severity":1,"message":"176","line":89,"column":8,"nodeType":"174","endLine":89,"endColumn":18,"suggestions":"177"},{"ruleId":"157","severity":1,"message":"178","line":5,"column":10,"nodeType":"159","messageId":"160","endLine":5,"endColumn":14},{"ruleId":"157","severity":1,"message":"179","line":5,"column":16,"nodeType":"159","messageId":"160","endLine":5,"endColumn":24},{"ruleId":"157","severity":1,"message":"180","line":6,"column":24,"nodeType":"159","messageId":"160","endLine":6,"endColumn":34},{"ruleId":"181","severity":1,"message":"182","line":5,"column":9,"nodeType":"183","endLine":5,"endColumn":13},{"ruleId":"157","severity":1,"message":"184","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":26},{"ruleId":"181","severity":1,"message":"182","line":5,"column":9,"nodeType":"183","endLine":5,"endColumn":13},{"ruleId":"157","severity":1,"message":"185","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":26},{"ruleId":"186","severity":1,"message":"187","line":12,"column":44,"nodeType":"188","messageId":"189","endLine":12,"endColumn":71},"@typescript-eslint/no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["190"],"no-negated-in-lhs",["191"],"'UserContainer' is defined but never used.","'addUsersChatAction' is defined but never used.",["190"],["191"],"'deleteMessageAction' is defined but never used.","'RequestChangeUserDataModel' is defined but never used.","'setMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'chatInfo.chatId' and 'chatInfo.messages'. Either include them or remove the dependency array. If 'setChat' needs the current value of 'chatInfo.messages', you can also switch to useReducer instead of useState and read 'chatInfo.messages' in the reducer.","ArrayExpression",["192"],"React Hook React.useCallback has an unnecessary dependency: 'dispatch'. Either exclude it or remove the dependency array.",["193"],"'Menu' is defined but never used.","'Dropdown' is defined but never used.","'UpOutlined' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'LoginFormContainer' is defined but never used.","'LoginTestContainer' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [chatInfo.chatId, chatInfo.messages]",{"range":"198","text":"199"},"Update the dependencies array to be: []",{"range":"200","text":"201"},[1761,1763],"[chatInfo.chatId, chatInfo.messages]",[2893,2903],"[]"]